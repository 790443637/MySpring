<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<bean id="otherbean" class="com.ld.domain.OtherBean"/>

	<!-- 通过setter注入:
        1.在bean元素中可以通过<property>，使用setter方法，为bean注入依赖的值
        2.对于简单值直接使用<property>的value属性赋值
        3.在配置文件中写入的值全是字符串，要能匹配对象中的类型，spring内部会经过类型的转换，转出成对应的属性类型
        name:属性的名字
        value:属性的值
     -->
	<bean id="somebean" class="com.ld.domain.SomeBean">
		<property name="name" value="somename"/>
		<property name="max" value="123"/>
		<property name="password" value="666666"/>
		<property name="amount" value="5.5"/>
		<property name="url" value="http://localhost:8080/heeh.html"/>

		<!-- 通过setter注入依赖其他对象
            1.必须保证依赖的对象是在spring中配置的对象
            2.使用<property>的ref属性来引用到要spring注入的bean的id或者name
         -->
		<property name="other" ref="otherbean"/>

		<!-- 处理集合 -->
		<property name="list"><!-- 给List集合赋值 -->
			<list>
				<value>123</value><!-- 普通类型的值 -->
				<value>哈哈</value>
				<ref bean="otherbean"/><!-- 对象类型的值 -->
				<ref bean="otherbean"/>
				<list><!-- 把集合当做值存入到集合中 -->
					<value>dsad</value>
					<value>456</value>
				</list>
			</list>
		</property>

		<property name="set"><!-- 给Set集合赋值 -->
			<set>
				<value>123</value><!-- 普通类型的值 -->
				<value>123</value>
				<ref bean="otherbean"/><!-- 对象类型的值 -->
				<ref bean="otherbean"/>
				<list><!-- 把集合当做值存入到集合中 -->
					<value>dsad</value>
					<value>456</value>
				</list>
			</set>
		</property>

		<property name="map"><!-- 给Map集合赋值 -->
			<map>
				<entry key="111" value="222"/>
				<entry key="111" value="333"/>
				<entry key="222" value-ref="otherbean"/><!-- 把对象当做value -->
				<entry key-ref="otherbean" value="222"/><!-- 把对象当做key -->
				<entry key="666"><!-- 把map当做value -->
					<map>
						<entry key="111" value="222"/>
					</map>
				</entry>
			</map>
		</property>

		<!-- 使用props的方式:
            1.正常装配为Propertie对象
            2.能够正确识别中文

        <property name="properties">
            <props>
                <prop key="show_sql">true</prop>
                <prop key="hbm2ddl.auto">create</prop>
                <prop key="中文">中文</prop>
            </props>
        </property>
         -->

		<!-- 使用value来注入properties
            每一个properties占一行，key=value
            不直接支持中文
         -->
		<property name="properties">
			<value>
				show_sql=true
				hbm2ddl.auto=create
				啊=哈哈
			</value>
		</property>
	</bean>
</beans>

